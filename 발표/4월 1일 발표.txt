comparable comparator이 무엇인지 알아오고 ppt로 만들어서 발표하기

0. 정렬을 하기위해선 ? 
우선 위에 두개를 설명하기 전에 위에 우선 정렬을 할려면 서로 비교가 되야 정렬이 가능합니다.
비교조차 할 수 없으면 정렬도 당연히 할수 없게 되는것을 알아야합니다.

1. comparable과 comparator가 무엇인가?
> 자바에서 객체 또는 원시타입의 값을 정렬하기 위한 두 가지 대표적 인터페이스 제공
끼리끼리 비교 가능 > comparable  객체 끼리 비교
끼리끼리 비교 x > comparator 객체 하나랑 기준 하나랑 비교

키를 기준으로했을떄 
comparable 사람들다 비교해서 키순서대로 정렬
comparator는 사람들에서 160이라는 기준을 제시하고 1명씩 160이 이상인지 아닌지 비교하여 정렬  

comparable 
java.lang.Comparable이라는 package를 통해 제공됨
java.util. 기본이 아닌 유용한것

이 인터페이스는 compareTo()라는 단 하나의 메소드 가지고 있음 
> 이를 통해 동일한 type의 값을 이용해 정렬

java에서 정렬을 수행할 수 있는 모든 class들은 comparable 인터페이스 구현
> Integer,Double,String의 상속/ 구현 구조 붙이기

커스텀으로 만들고 싶으면 comparable class 구현하여 compareTo() 메소드 구현

comparable의 메소드를 이용하면 parameter로 전달되는 객체와 객체 사이 비교하여 정렬을 수행

compareTo()는 전달된 객체와 현재 객체의 특정 값을 상호 비교하여 양수 / 0 / 음수 중 하나 반환

정렬이란 우리가 학교에서 키순으로 정렬을 할때 생각을 해보면 
우선 서로간의 비교가 가능해야  정렬이 가능하고 그 비교도 기준이 있어야 비교가 가능하다.
아까처럼 위와 같이 사람이 있을때
아까 말했다 싶이 우선 비교를 위한 기준으로 
우선 기준을 키로 세운다. 
그 기준으로 이제 왼쪽 사람과 가운데 사람을 
비교하여 큰사람을 왼쪽에 두고 이제 가운데와  
오른쪽을 비교하여 오른쪽에 두면 이게 바로 
사람을 키순으로 정렬한것이다..

이런 정렬의 기본지식을 이해하고 이제 본격적으로 comparable과 comparator를 알아보자면
두개는 우선 객체 또는 원시타입의 값을 정렬하기 위한 대표적인 인터페이스이다.
이렇게 두가지 정렬중에 다른것 중 
가장 중요한것은 lang 과 util 패키지에 있다는것이다.
lang > 자바에 기본적인 것을 담는것
util > 개발에 편리함을 위해 조미료 같은 역할이다.
그래서 기본적인 comparable은 정렬을 수행하는 모든 class들은 위와 같이 comparable을 구현한다.
이러한 인터페이스를 만들때 
ble은 compareTo()메소드를 만들어야하고
tor은 compare(o1,o2)메소드를 만들어야한다.